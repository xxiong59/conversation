{"ast":null,"code":"var _jsxFileName = \"/Users/xx/dev/hci/conversation/app/src/component/AltairComponent/AltairComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, memo } from \"react\";\nimport \"./Altair.css\";\n\n/**\n * Altair visualization component - UI only version\n * This component renders a visualization container\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AltairComponent() {\n  _s();\n  // Reference to the visualization container\n  const embedRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"altair-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vega-embed\",\n      ref: embedRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder-icon\",\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder-text\",\n          children: \"Visualization will appear here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n// Export memoized version to prevent unnecessary re-renders\n_s(AltairComponent, \"nrozN7atH2q1ObYfPvAAX1NaGeM=\");\n_c = AltairComponent;\nexport const Altair = /*#__PURE__*/memo(AltairComponent);\n_c2 = Altair;\nvar _c, _c2;\n$RefreshReg$(_c, \"AltairComponent\");\n$RefreshReg$(_c2, \"Altair\");","map":{"version":3,"names":["React","useRef","memo","jsxDEV","_jsxDEV","AltairComponent","_s","embedRef","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","Altair","_c2","$RefreshReg$"],"sources":["/Users/xx/dev/hci/conversation/app/src/component/AltairComponent/AltairComponent.js"],"sourcesContent":["import React, { useRef, memo } from \"react\";\nimport \"./Altair.css\";\n\n/**\n * Altair visualization component - UI only version\n * This component renders a visualization container\n */\nfunction AltairComponent() {\n  // Reference to the visualization container\n  const embedRef = useRef(null);\n  \n  return (\n    <div className=\"altair-container\">\n      {/* Container for the visualization */}\n      <div className=\"vega-embed\" ref={embedRef}>\n        {/* Visualization will be rendered here by external library */}\n        {/* Placeholder content when no visualization is loaded */}\n        <div className=\"placeholder-content\">\n          <div className=\"placeholder-icon\">ðŸ“Š</div>\n          <div className=\"placeholder-text\">Visualization will appear here</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Export memoized version to prevent unnecessary re-renders\nexport const Altair = memo(AltairComponent);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,IAAI,QAAQ,OAAO;AAC3C,OAAO,cAAc;;AAErB;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB;EACA,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE7B,oBACEG,OAAA;IAAKI,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAE/BL,OAAA;MAAKI,SAAS,EAAC,YAAY;MAACE,GAAG,EAAEH,QAAS;MAAAE,QAAA,eAGxCL,OAAA;QAAKI,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClCL,OAAA;UAAKI,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1CV,OAAA;UAAKI,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAA8B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AAAAR,EAAA,CAnBSD,eAAe;AAAAU,EAAA,GAAfV,eAAe;AAoBxB,OAAO,MAAMW,MAAM,gBAAGd,IAAI,CAACG,eAAe,CAAC;AAACY,GAAA,GAA/BD,MAAM;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}